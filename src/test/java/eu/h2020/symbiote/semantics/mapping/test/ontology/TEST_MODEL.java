/* CVS $Id: $ */
package eu.h2020.symbiote.semantics.mapping.test.ontology; 
import org.apache.jena.rdf.model.*;
import org.apache.jena.ontology.*;
 
/**
 * Vocabulary definitions from C:\Development\Projects\symbIoTe\SemanticMapping/src/test/resources/testModel.ttl 
 * @author Auto-generated by schemagen on 05 Jun 2018 17:48 
 */
public class TEST_MODEL {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static final OntModel M_MODEL = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = M_MODEL.createResource( NS );
    
    /** <p>The ontology's owl:versionInfo as a string</p> */
    public static final String VERSION_INFO = "v 1.0.0 2018/01/26 12:00:00";
    
    public static final ObjectProperty hasChild = M_MODEL.createObjectProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#hasChild" );
    
    public static final ObjectProperty knows = M_MODEL.createObjectProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#knows" );
    
    public static final DatatypeProperty age = M_MODEL.createDatatypeProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#age" );
    
    public static final DatatypeProperty firstName = M_MODEL.createDatatypeProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#firstName" );
    
    public static final DatatypeProperty hasValue = M_MODEL.createDatatypeProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#hasValue" );
    
    public static final DatatypeProperty hasValue2 = M_MODEL.createDatatypeProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#hasValue2" );
    
    public static final DatatypeProperty lastName = M_MODEL.createDatatypeProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#lastName" );
    
    public static final DatatypeProperty name = M_MODEL.createDatatypeProperty( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#name" );
    
    public static final OntClass A = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#A" );
    
    public static final OntClass Adult = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#Adult" );
    
    public static final OntClass B = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#B" );
    
    public static final OntClass C = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#C" );
    
    public static final OntClass D = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#D" );
    
    public static final OntClass E = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#E" );
    
    public static final OntClass F = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#F" );
    
    public static final OntClass Person = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#Person" );
    
    public static final OntClass PersonWithTwoAdultChildren = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#PersonWithTwoAdultChildren" );
    
    public static final OntClass RichPerson = M_MODEL.createClass( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#RichPerson" );
    
    public static final Individual instanceOfA = M_MODEL.createIndividual( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#instanceOfA", M_MODEL.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
    public static final Individual instanceOfB = M_MODEL.createIndividual( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#instanceOfB", M_MODEL.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
    public static final Individual johnDoe = M_MODEL.createIndividual( "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#johnDoe", M_MODEL.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
}
