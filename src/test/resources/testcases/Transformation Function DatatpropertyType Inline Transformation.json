{
  "name" : "Transformation of int to string with locally defined/inline JavaScript tranformation",
  "commonPrefixes" : {
    "xsd" : "http://www.w3.org/2001/XMLSchema#",
    "rdfs" : "http://www.w3.org/2000/01/rdf-schema#",
    "test" : "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#",
    "rdf" : "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "owl" : "http://www.w3.org/2002/07/owl#",
    "dc" : "http://purl.org/dc/elements/1.1/"
  },
  "baseQuery" : 
	  "SELECT ?x WHERE 
	  { 
		?x a test:A .
		?x test:hasValue INT_VALUE .
	  }",
  "alternativeQueries" : [ 
	"SELECT ?x WHERE
	{
		?x a test:A .
		?x test:hasValue ?y.
		FILTER(?y=INT_VALUE) .
	}"
  ],
  "expectedResult" : 
	"SELECT ?x WHERE 
	{ 
		?x a test:B.
		?x test:hasValue2 STRING_VALUE .
	}",
  "mapping" : 
	"BASE <http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#>
	PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

	TRANSFORMATION toStringLocal { parameters[0].toString(); }

	RULE 
	CONDITION CLASS :A :hasValue TYPE xsd:integer  
	PRODUCTION CLASS :B  
		:hasValue2 VALUE toStringLocal ( REFERENCE :hasValue )",
  "replacements" : [ {
    "STRING_VALUE" : "\"42\"^^xsd:string",
    "INT_VALUE" : "\"42\"^^xsd:integer"
  } ]
}