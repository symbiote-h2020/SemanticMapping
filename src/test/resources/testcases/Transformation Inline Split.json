{
  "name" : "Transformation splitting two values inline",
  "commonPrefixes" : {
    "xsd" : "http://www.w3.org/2001/XMLSchema#",
    "rdfs" : "http://www.w3.org/2000/01/rdf-schema#",
    "test" : "http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#",
    "rdf" : "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "owl" : "http://www.w3.org/2002/07/owl#",
    "dc" : "http://purl.org/dc/elements/1.1/"
  },
  "baseQuery" : 
	"SELECT ?x WHERE
	{ 
		?x a test:B.
		?x test:name \"Michael Jacoby\"^^xsd:string .
	}",
  "alternativeQueries" : [ 
  ],
  "expectedResult" : 
	"SELECT ?x WHERE 
	{ 
		?x a test:A ;
		test:firstName \"Michael\"^^xsd:string ;
		test:lastName \"Jacoby\"^^xsd:string .
	}",
  "mapping" : 
  "BASE <http://www.symbiote-h2020.eu/ontology/semanticmapping/testModel#>
	PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

	TRANSFORMATION split { parameters[0].split(parameters[1])[parameters[2]] }

	RULE 
		CONDITION CLASS :B :name TYPE xsd:string  
		PRODUCTION CLASS :A  
			:firstName VALUE split ( REFERENCE :name , \" \"  , 0  ) 
			:lastName VALUE split ( REFERENCE :name , \" \"  , 1  )",
  "replacements" : [ {
    "FIRST_NAME" : "\"Michael\"^^xsd:string",
    "LAST_NAME" : "\"Jacoby\"^^xsd:integer"
  } ]
}